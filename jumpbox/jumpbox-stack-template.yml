Description: >
  Sumit Arora - Udagram Project


  This module stack deploys a Jumpbox bastion instance, with a pair of public and private subnets spread 
  across two AZs. It deploys an Internet Gateway, with a default route on the public subnets. 
  It deploys a pair of NAT Gateways (one in each AZ) and default routes for them in the private subnets.
Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  InstanceType:
    Description: The instance type to use for the Jumpbox host
    Default: t2.micro
    Type: String
    
  InstanceAMI:
    Type: String
    Default: ami-0ac73f33a1888c64a
    Description: AMI of a Jumpbox host instance to use

  SSHLocation:
    Description: Network allowed to connect using ssh to Jumpbox host in public subnet.
    Default: 0.0.0.0/0
    Type: String

  KeyName:
    Description: Keypair for Linux Jumpbox host
    Type: AWS::EC2::KeyPair::KeyName
    Default: udagramJumpboxKey

Resources:

  JumpboxSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh connection to Jumpbox host
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} SecGroup Jumpbox Hosts

  ElasticIpJumpbox:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID

  JumpboxAutoSG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref JumpboxLaunchConfig
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUBLIC1-SN
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUBLIC2-SN
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-JumpboxAutoSG
        PropagateAtLaunch: True
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: True

  JumpboxLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref InstanceAMI
      KeyName: !Ref KeyName
      IamInstanceProfile:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-InstanceProfile
      SecurityGroups:
      - !Ref JumpboxSecGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
      UserData:
        Fn::Base64: 
          Fn::Sub:
            - |
              #!/bin/bash
              apt update
              apt install unzip
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              ./aws/install
              instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)

              aws ec2 associate-address --instance-id $instance_id --allow-reassociation  --region ${AWS::Region} --allocation-id ${EIPAllocation}
              aws ssm get-parameter --name udagramJumpboxKeyPrivate --with-decryption --output text --query Parameter.Value > /home/ubuntu/.ssh/id_rsa
              chown ubuntu:ubuntu /home/ubuntu/.ssh/id_rsa
              chmod 700 /home/ubuntu/.ssh/id_rsa
            - EIPAllocation: !GetAtt ElasticIpJumpbox.AllocationId
Outputs:
  JumpboxPublicIPAddress:
    Description: Jumpbox host public IP
    Value: !Ref ElasticIpJumpbox
    Export:
      Name: !Sub ${EnvironmentName}-Jumpbox-PUBLIC-IP
  
  JumpboxSecurityGroupSSH:
    Description: Will use to allow SSH connections from the Jumpbox host
    Value: !Ref JumpboxSecGroup
    Export:
      Name: !Sub ${EnvironmentName}-SSHSecurityGroup